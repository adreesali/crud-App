* {
  margin: 0;
  padding: 0;
}

.container {
  background: linear-gradient(to right bottom, #e1b382,  #c89666);
  width: 100%;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}
.app-wrapper {
background-color: #12343b;
min-width: 450px;
min-height: 650px;
padding: 30px;
box-sizing: border-box;
border-radius: 10px;
box-shadow: 3px 6px 40px #000;
margin-bottom: 10px;
}

.header h1 {
  color: #fff;
  text-align: center;
  margin: 30px 0;
}

.task-input {
  outline: none;
  width: 260px;
  padding: 15px;
  margin-right: 25px;
  font-size: 20px;
  color: #ccc;
  background-color: #00000000;
  border: 1px solid #c89666;
}

.button-add {
  width: 70px;
  padding: 15px 15px;
  color: #fff;
  font-size: 20px;
  text-align: center;
  background-color: magenta;
  border-radius: 10px;
  padding: 10px;
  max-height: 60px;
}
.button-complete,
.button-delete,
.button-edit {
  border: none;
  outline: none;
  background-color: transparent;
  font-size: 28px;
  border-radius: 50%;
}

.button-complete{
  color: #ff6c6c;
  margin-right: 10px;
}

.button-edit {
  color: #e2d029;
  margin-right: 10px;
  color: lightseagreen;
  width: 70px;
  padding: 15px 15px;
  color: #fff;
  font-size: 15px;
  text-align: center;
  background-color: rgb(255, 60, 0);
  border-radius: 10px;
  padding-right: 70px;
  padding: 10px;
  margin-top: 20px;
  right: 50px;
  max-height: 60px;
}
.button-delete {
  color: lightseagreen;
  width: 70px;
  padding: 15px 15px;
  color: #fff;
  font-size: 15px;
  text-align: center;
  background-color: rgb(255, 60, 0);
  border-radius: 10px;
  padding-right: 70px;
  padding: 10px;
  margin-top: 20px;
  right: 50px;
  max-height: 60px;
}

.complete {
  text-decoration-style: solid;
  text-decoration-line: line-through;
  text-decoration-color: #ff6c6c;
  opacity: 0.6;
}
.list {
  width: 220px;
  background-color: #12343b;
  border: none;
  color: #ccc;
  font-size: 15px;
  padding-left: 10px;
  margin-right: 15px;
}

input:focus, 
button:focus {
  outline: none;
}














/*   
 import React, { useState } from 'react';
 import { Modal,  Switch,  Form, Input, Select ,  Collapse,  message,  FormInstance, Row, Space, Tag } from 'antd';



 function App() {
       const [gridApi, setGridApi] = useState(null)
       const [tableData, setTableData] = useState([
         {id: 1, name:"Adrees", email:"adreesali.dev@gmail.com", phone: "03425045203", dob: "15/10/20004"}
       ])
       
       const columnDefs = [
         {headerName: "ID", feild: "id"},
         {headerName: "Name", feild: "name"},
         {headerName: "Email", feild: "email"},
         {headerName: "Phone", feild: "phone"},
         {headerName: "Birth of date", feild: "dob"}
       ]
      
        const onGridReady = (params) => {
          setGridApi(params)
        }

        const defaultColDef = {
          sortable: true,
          flex:1, filter: true,
          floatingFilter: true
        }
        return (
          <div className="App">
            <h1 className="aling-middle">React-App</h1>
            <div className="ag-theme-alpine" style={{height: '400px'}}>
              <Table
              rowData={tableData}
              columnDefs={columnDefs}
              defaultColDef={defaultColDef}
              onGridReady={onGridReady
            
             }
              /> 
            </div>
          </div>
        )
 }
        
 export default App; */




 /* its a modal  */
     /* <Form onSubmit={handleAddFormSubmit}
            labelCol={{ span: 10 }}
            wrapperCol={{ span: 30 }}
            layout="vertical"
          >
            <Form.Item label="name" name="username">
        <Input 
        placeholder="Enter a name" 
        name="fullName"
        />
      </Form.Item>
      <Form.Item label="address" >
        <Input  
        name="address"
        placeholder="Enter a address" 
        onChange={handleAddFormChange}

        />
      </Form.Item>
      <Form.Item label="PhoneNumber" name="password">
        <Input  
        name="PhoneNumber"
        placeholder="Enter a phoneNumber" 
        onChange={handleAddFormChange}
        />
      </Form.Item>
      <Form.Item label="email" name="username" >
        <Input  
         name="email"
        placeholder="Enter a username"
        onChange={handleAddFormChange}

         />
      </Form.Item>
      <Form.Item label=" ">
        <Button type="submit" >
       ADD
        </Button>
      </Form.Item>
            </Form>  */
        /* <Button onClick={()=>setModal(true)} className="btn btn-lg bg-success">Add new Funnels</Button>
        <Modal width={1200}  title="Add New" open={modal} onCancel={()=>setModal(!modal)}>
        <Form onSubmit={handleAddFormSubmit}
            labelCol={{ span: 10 }}
            wrapperCol={{ span: 30 }}
            layout="vertical"
          >
            <Form.Item label="name" name="username" rules={[{ required: true }]}>
        <Input 
        placeholder="Enter a name" 
        name="fullName"
        />
      </Form.Item>
      <Form.Item label="address" name="username" rules={[{ required: true }]}>
        <Input  
        name="address"
        placeholder="Enter a address" 
        onChange={handleAddFormChange}

        />
      </Form.Item>
      <Form.Item label="PhoneNumber" name="password" rules={[{ required: true }]}>
        <Input  
        name="PhoneNumber"
        placeholder="Enter a phoneNumber" 
        onChange={handleAddFormChange}
        />
      </Form.Item>
      <Form.Item label="email" name="username" rules={[{ required: true }]}>
        <Input  
         name="email"
        placeholder="Enter a username"
        onChange={handleAddFormChange}

         />
      </Form.Item>
      <Form.Item label=" ">
        <Button type="submit" >
       ADD
        </Button>
      </Form.Item>
            </Form>                     
          </Modal>  */